//
// Generated file, do not edit! Created by opp_msgtool 6.1 from protocol/messages/ARQFrame.msg.
//

#ifndef __ARQFRAME_M_H
#define __ARQFRAME_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class ARQFrame;
/**
 * Class generated from <tt>protocol/messages/ARQFrame.msg:2</tt> by opp_msgtool.
 * <pre>
 * // ARQFrame.msg
 * packet ARQFrame
 * {
 *     int srcAddress;
 *     int destAddress;
 *     int seqNum;
 *     bool isAck;
 *     bool isNak;
 *     bool lastPacket;
 *     char payload[1000];
 * }
 * </pre>
 */
class ARQFrame : public ::omnetpp::cPacket
{
  protected:
    int srcAddress = 0;
    int destAddress = 0;
    int seqNum = 0;
    bool isAck_ = false;
    bool isNak_ = false;
    bool lastPacket = false;
    char payload[1000] = {0};

  private:
    void copy(const ARQFrame& other);

  protected:
    bool operator==(const ARQFrame&) = delete;

  public:
    ARQFrame(const char *name=nullptr, short kind=0);
    ARQFrame(const ARQFrame& other);
    virtual ~ARQFrame();
    ARQFrame& operator=(const ARQFrame& other);
    virtual ARQFrame *dup() const override {return new ARQFrame(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getSrcAddress() const;
    virtual void setSrcAddress(int srcAddress);

    virtual int getDestAddress() const;
    virtual void setDestAddress(int destAddress);

    virtual int getSeqNum() const;
    virtual void setSeqNum(int seqNum);

    virtual bool isAck() const;
    virtual void setIsAck(bool isAck);

    virtual bool isNak() const;
    virtual void setIsNak(bool isNak);

    virtual bool getLastPacket() const;
    virtual void setLastPacket(bool lastPacket);

    virtual size_t getPayloadArraySize() const;
    virtual char getPayload(size_t k) const;
    virtual void setPayload(size_t k, char payload);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ARQFrame& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ARQFrame& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline ARQFrame *fromAnyPtr(any_ptr ptr) { return check_and_cast<ARQFrame*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __ARQFRAME_M_H

