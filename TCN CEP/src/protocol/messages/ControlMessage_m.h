//
// Generated file, do not edit! Created by opp_msgtool 6.1 from protocol/messages/ControlMessage.msg.
//

#ifndef __CONTROLMESSAGE_M_H
#define __CONTROLMESSAGE_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0601
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class ControlMessage;
/**
 * Class generated from <tt>protocol/messages/ControlMessage.msg:2</tt> by opp_msgtool.
 * <pre>
 * // ControlMessage.msg
 * message ControlMessage
 * {
 *     int kind;  // 0=ACK, 1=NAK, 2=Timeout
 *     int seqNum;
 *     int senderAddress;
 * }
 * </pre>
 */
class ControlMessage : public ::omnetpp::cMessage
{
  protected:
    int kind = 0;
    int seqNum = 0;
    int senderAddress = 0;

  private:
    void copy(const ControlMessage& other);

  protected:
    bool operator==(const ControlMessage&) = delete;

  public:
    ControlMessage(const char *name=nullptr, short kind=0);
    ControlMessage(const ControlMessage& other);
    virtual ~ControlMessage();
    ControlMessage& operator=(const ControlMessage& other);
    virtual ControlMessage *dup() const override {return new ControlMessage(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getKind() const;
    virtual void setKind(int kind);

    virtual int getSeqNum() const;
    virtual void setSeqNum(int seqNum);

    virtual int getSenderAddress() const;
    virtual void setSenderAddress(int senderAddress);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ControlMessage& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ControlMessage& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline ControlMessage *fromAnyPtr(any_ptr ptr) { return check_and_cast<ControlMessage*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __CONTROLMESSAGE_M_H

